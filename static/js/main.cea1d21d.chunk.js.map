{"version":3,"sources":["assets/images/crowd_bg1.jpg","assets/images/crowd_bg2.png","assets/images/crowd_bg3.png","assets/images/crowd_bg4.png","assets/images/unfold-logo-white.png","assets/images/unfold-logo-dark.png","assets/images/contact/map.png","components/NavBar/NavBar.jsx","components/Home/Crowd_rise/CrowdRise.jsx","components/Home/Home.jsx","components/Contact/Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","id","to","src","logo","alt","style","color","ulColor","CrowdRise","crow_bg1","className","crow_bg2","crow_bg3","crow_bg4","Home","logo_white","position","top","width","Contact","logo_dark","contact_map","type","name","cols","rows","value","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,iC,wOCiC5BC,MA7Bf,SAAgBC,GACd,OACE,yBAAKC,GAAG,cACN,kBAAC,IAAD,CAAMC,GAAG,KACP,yBAAKC,IAAKH,EAAMI,KAAMC,IAAI,UAE5B,yBAAKJ,GAAG,WACN,wBAAIK,MAAO,CAAEC,MAAOP,EAAMQ,UACxB,4BACE,2BACE,kBAAC,IAAD,CAAMN,GAAG,aAAT,cAGJ,4BACE,2BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,WAGJ,4BACE,2BACE,kBAAC,IAAD,CAAMA,GAAG,YAAT,iB,0ECICO,MArBf,SAAmBT,GACjB,OACE,yBAAKC,GAAG,cACN,yBAAKA,GAAG,oBACN,yBAAKE,IAAKO,IAAUL,IAAI,GAAGM,UAAU,UAAUV,GAAG,aAClD,yBAAKE,IAAKS,IAAUP,IAAI,GAAGM,UAAU,UAAUV,GAAG,aAClD,yBAAKE,IAAKU,IAAUR,IAAI,GAAGM,UAAU,UAAUV,GAAG,aAClD,yBAAKE,IAAKW,IAAUT,IAAI,GAAGM,UAAU,UAAUV,GAAG,cAEpD,yBAAKA,GAAG,eACN,yCACA,gLAIA,sD,iBCNOc,MAXf,SAAcf,GACZ,OACE,6BACE,kBAAC,EAAD,CAAQI,KAAMY,IAAYR,QAAQ,UAClC,yBAAKF,MAAO,CAAEW,SAAU,WAAYC,IAAK,EAAGC,MAAO,SACjD,kBAAC,EAAD,S,0CCwCOC,MA5Cf,SAAiBpB,GACf,OACE,6BACE,kBAAC,EAAD,CAAQI,KAAMiB,IAAWb,QAAQ,UACjC,6BAASP,GAAG,WACV,yBAAKA,GAAG,eACN,yBAAKE,IAAKmB,IAAajB,IAAI,SAE7B,yBAAKJ,GAAG,gBACN,gEACA,8BACE,6CACa,oCAEb,2BAAOsB,KAAK,SACZ,4CACY,oCAEZ,2BAAOA,KAAK,SACZ,wCACQ,oCAER,2BAAOA,KAAK,UACZ,+CACe,oCAEf,2BAAOA,KAAK,SACZ,+CACe,oCAEf,2BAAOA,KAAK,SACZ,6DAC6B,oCAE7B,8BAAUC,KAAK,GAAGC,KAAK,KAAKC,KAAK,MACjC,8DACA,2BAAOH,KAAK,SAASI,MAAM,iB,OCnBxBC,MAjBf,WACE,OACE,yBAAKjB,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkB,KAAK,YACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,WCHQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.cea1d21d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/crowd_bg1.6fc3e7c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crowd_bg2.c16ad400.png\";","module.exports = __webpack_public_path__ + \"static/media/crowd_bg3.de0ac5b7.png\";","module.exports = __webpack_public_path__ + \"static/media/crowd_bg4.959e8569.png\";","module.exports = __webpack_public_path__ + \"static/media/unfold-logo-white.cd693372.png\";","module.exports = __webpack_public_path__ + \"static/media/unfold-logo-dark.e709d1e7.png\";","module.exports = __webpack_public_path__ + \"static/media/map.9baaf601.png\";","import React from \"react\";\r\nimport \"./Navbar.css\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nfunction NavBar(props) {\r\n  return (\r\n    <div id=\"header_nav\">\r\n      <Link to=\"/\">\r\n        <img src={props.logo} alt=\"logo\" />\r\n      </Link>\r\n      <nav id=\"nav_bar\">\r\n        <ul style={{ color: props.ulColor }}>\r\n          <li>\r\n            <a>\r\n              <Link to=\"/projects\">Projects</Link>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a>\r\n              <Link to=\"/About\">About</Link>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a>\r\n              <Link to=\"/contact\">Contact</Link>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport crow_bg1 from \"../../../assets/images/crowd_bg1.jpg\";\r\nimport crow_bg2 from \"../../../assets/images/crowd_bg2.png\";\r\nimport crow_bg3 from \"../../../assets/images/crowd_bg3.png\";\r\nimport crow_bg4 from \"../../../assets/images/crowd_bg4.png\";\r\nimport \"./CrowdRise.css\";\r\n\r\nfunction CrowdRise(props) {\r\n  return (\r\n    <div id=\"crowd_rise\">\r\n      <div id=\"crowd_background\">\r\n        <img src={crow_bg1} alt=\"\" className=\"crow_bg\" id=\"crow_bg1\" />\r\n        <img src={crow_bg2} alt=\"\" className=\"crow_bg\" id=\"crow_bg2\" />\r\n        <img src={crow_bg3} alt=\"\" className=\"crow_bg\" id=\"crow_bg3\" />\r\n        <img src={crow_bg4} alt=\"\" className=\"crow_bg\" id=\"crow_bg4\" />\r\n      </div>\r\n      <div id=\"crow_detail\">\r\n        <h1>CrowdRise</h1>\r\n        <p>\r\n          A GoFundMe™ company. Putting “fun” back in fundraising – we created a\r\n          new strategically positioned visual style and identity.\r\n        </p>\r\n        <button> SEE CASE STUDY</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CrowdRise;\r\n","import React from \"react\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport CrowdRise from \"./Crowd_rise/CrowdRise\";\r\nimport logo_white from \"../../assets/images/unfold-logo-white.png\";\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div>\r\n      <NavBar logo={logo_white} ulColor=\"white\" />\r\n      <div style={{ position: \"absolute\", top: 0, width: \"100%\" }}>\r\n        <CrowdRise />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport \"./Contact.css\";\r\nimport logo_dark from \"../../assets/images/unfold-logo-dark.png\";\r\nimport contact_map from \"../../assets/images/contact/map.png\";\r\n\r\nfunction Contact(props) {\r\n  return (\r\n    <div>\r\n      <NavBar logo={logo_dark} ulColor=\"black\" />\r\n      <section id=\"contact\">\r\n        <div id=\"contact_map\">\r\n          <img src={contact_map} alt=\"map\" />\r\n        </div>\r\n        <div id=\"contact_form\">\r\n          <h1>We hoped you’d end up here.</h1>\r\n          <form>\r\n            <label>\r\n              First Name <span>*</span>\r\n            </label>\r\n            <input type=\"text\" />\r\n            <label>\r\n              Last Name <span>*</span>\r\n            </label>\r\n            <input type=\"text\" />\r\n            <label>\r\n              Email <span>*</span>\r\n            </label>\r\n            <input type=\"email\" />\r\n            <label>\r\n              Phone Number <span>*</span>\r\n            </label>\r\n            <input type=\"text\" />\r\n            <label>\r\n              Company Name <span>*</span>\r\n            </label>\r\n            <input type=\"text\" />\r\n            <label>\r\n              Tell Us About Your Project <span>*</span>\r\n            </label>\r\n            <textarea name=\"\" cols=\"30\" rows=\"5\"></textarea>\r\n            <span>The more details the better!</span>\r\n            <input type=\"button\" value=\"SEND IT\" />\r\n          </form>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/Home/Home\";\nimport Contact from \"./components/Contact/Contact\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/contact\">\n            <Contact />\n          </Route>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}